#!/usr/bin/env bash


PAD='.........................'
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"


# Do not execute as root
if [ "$(id -u)" == "0" ]; then
   echo "Dude, ditch root." 1>&2
   exit 1
fi

# Fail hard
set -e


# Check for flags
while test $# != 0
do
    case "$1" in
    -d) set -x ;;
    esac
    shift
done

_source() {
    source $1
}


_sync_folder() {
    echo "Syncing folder $1"
    SRC_DIR=$1

    _sync_file $SRC_DIR

    for f in $(find $SRC_DIR/*); do
        if [ -d $f ]; then
            _sync_folder $f
        elif [ -f $f ]; then
            _sync_file $f
        fi
    done
}

_sync_file() {
    echo "Syncing file $1 $2"

    # Assign args
    SRC=$1
    DEST=${2:-""}

    printf "Linking %s %s" $f "${PAD:${#f}}"
    if [ -z "$DEST" ]; then
        ln -fs $DIR/$SRC ~/$SRC
    else
        ln -fs $DIR/$SRC ~/$DEST
    fi
    printf " done.\n"
}

_sync() {

    # Sync file
    if [ -d $1 ]; then
        _sync_folder $1 $2
    elif [ -f $1 ]; then
        _sync_file $1 $2
    fi
    
}

# Finds file where script is stored
# DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# # for f in $(ls -a $DIR | grep '^\.[a-zA-Z0-9]\{2,\}')
# do
#   printf "Linking %s %s" $f "${PAD:${#f}}"
#   # Link every file in source directory to user's home
#   ln -fs "$DIR/$f" ~/$f
#   printf "done.\n"
# done


# _sync .bashrc
# _sync .bashrc .bash_profile
# _sync .emacs
_sync .vim

# _source .bashrc
